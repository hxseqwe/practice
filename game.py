
import random
from tkinter import Tk, Toplevel, Label, Button
from windows import WorkWindow
from tkinter import *
from tkinter import ttk
from tkinter.messagebox import showerror, showwarning, showinfo

class Game:
    def __init__(self):
        self.mood = 100
        self.day = 0
        self.money = 0
        self.experience = 0
        self.starting = None
        self.nick = ""
        self.work_level = 0 
        
        self.init_window()

    def init_window(self):
        self.window = Tk()
        self.window.geometry("700x500")
        self.window.config(bg="#0a3a48")
        self.window.resizable(False, False)

        Label(self.window, text="–°–∏–º—É–ª—è—Ç–æ—Ä –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞", bg="#0a3a48", fg="white", font=("Arial", 20)).pack(anchor="center")

        Button(self.window, text="–ù–∞—á–∞—Ç—å –∏–≥—Ä—É", height=2, width=15, fg="white", bg="#4c5acd", command=self.show_life_choice).pack(pady=30)
        Button(self.window, text="–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–≥—Ä—É", height=2, width=15, fg="white", bg="#4c5acd").pack()

        self.window.mainloop()

    def show_life_choice(self):
        """–û–∫–Ω–æ –≤—ã–±–æ—Ä–∞: '–ó–∞–≤–µ—Å—Ç–∏ –¥–µ–≤—É—à–∫—É' –∏–ª–∏ '–°—Ç–∞—Ç—å –ª–∏–Ω–≥–≤–∏—Å—Ç–æ–º'."""
        self.window.destroy()
        
        self.choice_window = Tk()
        self.choice_window.title("–í—ã–±–æ—Ä –ø—É—Ç–∏")
        self.choice_window.geometry("700x500")
        self.choice_window.config(bg="#0a3a48")
        self.choice_window.resizable(False, False)

        Label(self.choice_window, text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å:", bg="#0a3a48", fg="white", font=("Arial", 20)).pack(pady=50)

        
        self.girl_btn = Button(
            self.choice_window, 
            text="–ó–∞–≤–µ—Å—Ç–∏ –¥–µ–≤—É—à–∫—É", 
            height=2, 
            width=20, 
            fg="white", 
            bg="#ff6b81",
            command=self.girl_choice
        )
        self.girl_btn.pack(pady=20)
        self.girl_btn.bind("<Enter>", self.run_away)  

        
        Button(
            self.choice_window, 
            text="–°—Ç–∞—Ç—å –ª–∏–Ω–≥–≤–∏—Å—Ç–æ–º", 
            height=2, 
            width=20, 
            fg="white", 
            bg="#4c5acd",
            command=self.linguist_choice
        ).pack(pady=20)

    def run_away(self, event):
        """–ó–∞—Å—Ç–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É '—É–±–µ–≥–∞—Ç—å' –æ—Ç –∫—É—Ä—Å–æ—Ä–∞."""
        x = random.randint(50, 650)
        y = random.randint(50, 450)
        self.girl_btn.place(x=x, y=y)  

    def girl_choice(self):
        """–ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª–∏ '–ó–∞–≤–µ—Å—Ç–∏ –¥–µ–≤—É—à–∫—É'."""
        showinfo("–û—à–∏–±–∫–∞", "–î–µ–≤—É—à–∫–∞ —Å–±–µ–∂–∞–ª–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ '–°—Ç–∞—Ç—å –ª–∏–Ω–≥–≤–∏—Å—Ç–æ–º' üò¢")
        self.choice_window.destroy()
        self.init_window() 

    def linguist_choice(self):
        """–ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª–∏ '–°—Ç–∞—Ç—å –ª–∏–Ω–≥–≤–∏—Å—Ç–æ–º'."""
        self.choice_window.destroy()
        self.setup_game_window()

    def setup_game_window(self):
        """–û–∫–Ω–æ –≤–≤–æ–¥–∞ –Ω–∏–∫–Ω–µ–π–º–∞."""
        self.starting = Tk()
        self.starting.title("–ò–≥—Ä–∞")
        self.starting.geometry("700x500")
        self.starting.config(bg="#0a3a48")
        

        Label(self.starting, text="–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º", bg="#0a3a48", fg="white", font=("Arial", 20)).pack()

        self.entry = ttk.Entry()
        self.entry.pack(anchor="n", padx=6, pady=6)

        Button(self.starting, text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", height=2, width=15, fg="white", bg="#4c5acd", command=self.start_game).pack()

    def start_game(self):
        self.nick = self.entry.get()
        self.starting.destroy()
        
        self.create_game_interface()
        self.mood_func()

    def create_game_interface(self):
        self.starting = Tk()
        self.starting.title("–ò–≥—Ä–∞")
        self.starting.geometry("700x500")
        self.starting.config(bg="#0a3a48")

        Label(self.starting, text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {self.nick}", bg="#0a3a48", fg="white").pack(anchor="nw")

        self.days_counter = Label(self.starting, text=f"–î–µ–Ω—å - {self.day}", bg="#0a3a48", fg="white")
        self.mood_counter = Label(self.starting, text=f"–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ - {int(self.mood)}", bg="#0a3a48", fg="white")
        self.money_counter = Label(self.starting, text=f"–î–µ–Ω—å–≥–∏ - {self.money}", bg="#0a3a48", fg="white")
        self.experience_counter = Label(self.starting, text=f"–û–ø—ã—Ç - {self.experience}", bg="#0a3a48", fg="white")

        for label in [self.days_counter, self.mood_counter, self.money_counter, self.experience_counter]:
            label.pack(anchor="nw")

        Button(self.starting, text="–ù–∞—á–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å", height=2, width=20, fg="white", bg="#4c5acd", command=self.new_day).pack(side="bottom", anchor="se", padx=10, pady=10)
        
        Button(self.starting, text="–†–∞–±–æ—Ç–∞", height=2, width=12, fg="white", bg="#4c5acd", command=self.open_work_window).pack(anchor='center', pady=10)
        Button(self.starting, text="–ù–∞–≤—ã–∫–∏", height=2, width=12, fg="white", bg="#4c5acd", command=self.open_skills_window).pack(anchor='center', pady=10)
        Button(self.starting, text="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ", height=2, width=12, fg="white", bg="#4c5acd", command=self.open_entertainment_window).pack(anchor='center', pady=10)

    def new_day(self):
        self.day += 1
        self.days_counter.config(text=f"–î–µ–Ω—å - {self.day}")

    def mood_func(self):
        if self.mood > 0:
            self.mood -= 0.5
            self.mood_counter.config(text=f"–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ - {int(self.mood)}")
            self.starting.after(1000, self.mood_func)

    def open_work_window(self):
        WorkWindow(self)

    def open_skills_window(self):
        self.open_new_window("–ù–∞–≤—ã–∫–∏", "–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–≤—ã–∫–∞—Ö")

    def open_entertainment_window(self):
        self.open_new_window("–†–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ", "–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è—Ö")

    def open_new_window(self, title, message):
        new_window = Toplevel(self.starting)
        new_window.title(title)
        new_window.geometry("300x200")
        Label(new_window, text=message).pack()
